#!/bin/bash

if [ $# -eq 0 ]; then
  echo " "
  echo "Usage: $0 file1.in.txt file2.in.txt ..."
  echo " "
  echo "Runs executable ./info in the current working directory,"
  echo "on each of the specified input files, assumed to be invalid."
  echo "Makes sure your standard output is empty, and compares your"
  echo "error message to the example one.  Error messages do not need"
  echo "to match perfectly, but absence of an error message is bad."
  echo " "
  exit 1
fi

summary=`mktemp`

echo " " > $summary
echo "============================================================" >> $summary
echo "Summary of tests" >> $summary
echo "============================================================" >> $summary
echo " " >> $summary
printf "%-14s    %-14s    %-20s\n" "standard input" "error messages" "input file" >> $summary
printf "%-14s    %-14s    %-20s\n" "--------------" "--------------" "--------------------" >> $summary

checkinput()
{
  infile="$1"
  echo "============================================================"
  echo "Checking $infile"
  echo "============================================================"
  errfile=`basename -s .in.txt $infile`.err.txt
  if [ ! -f $errfile ]; then
    echo '    Missing ' $errfile
    return
  fi

  myout=`mktemp`
  myerr=`mktemp`

  ./info < $infile > $myout 2> $myerr

  if [ -s $myout ]; then
    echo "Standard output (should be empty): "
    cat $myerr
    printf "%-14s    " "[ not empty ]" >> $summary
  else
    echo "Standard output is empty (as it should be)."
    printf "%-14s    " "[   empty   ]" >> $summary
  fi

  echo "Instructor's error message(s): "
  cat $errfile

  if [ -s $myerr ]; then
    echo "Your error message(s): "
    cat $myerr
    printf "%-14s    " "[  present  ]" >> $summary
  else
    echo "You have no error message"
    printf "%-14s    " "[  missing  ]" >> $summary
  fi

  rm -f $myout $myerr

  printf "$infile\n" >> $summary
}


for file; do
  checkinput $file
done
cat $summary
rm -f $summary
echo " "
